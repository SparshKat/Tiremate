{"ast":null,"code":"import _objectWithoutProperties from \"/Users/sparsh/Documents/Logic_Bomb/material-kit-react-v1.4.0/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/sparsh/Documents/Logic_Bomb/material-kit-react-v1.4.0/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sparsh/Documents/Logic_Bomb/material-kit-react-v1.4.0/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sparsh/Documents/Logic_Bomb/material-kit-react-v1.4.0/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sparsh/Documents/Logic_Bomb/material-kit-react-v1.4.0/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sparsh/Documents/Logic_Bomb/material-kit-react-v1.4.0/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sparsh/Documents/Logic_Bomb/material-kit-react-v1.4.0/src/builtComponents/SmallComponents/TableStats.jsx\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport classNames from \"classnames\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport CustomLinearProgress from \"components/CustomLinearProgress/CustomLinearProgress.jsx\";\nimport Success from \"components/Typography/Success.jsx\"; //css file\n\nimport tablePageStyle from \"assets/jss/material-kit-react/views/tablePage.jsx\";\n\nvar TableStats =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TableStats, _React$Component);\n\n  function TableStats() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableStats);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableStats)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      list: [{\n        title: 'Tyre Model',\n        description: ' BCVHGU1278391734',\n        type: 'text'\n      }, {\n        title: 'Carbon Used',\n        description: '  Premium Quality',\n        type: 'text'\n      }, {\n        title: 'Tire Size : ',\n        description: ' 20 inches',\n        type: 'text'\n      }, {\n        title: 'Axis Size : ',\n        description: '13 Inches',\n        suitable: 'danger',\n        type: 'compare'\n      }, {\n        title: 'Axis Alignment : ',\n        description: '2 Inches',\n        suitable: 'danger',\n        type: 'compare'\n      }] // componentDidMount() {\n      //   const arrOfInfo = [...this.state.list];\n      //   console.log(arrOfInfo[0].title);\n      // }\n\n    };\n    return _this;\n  }\n\n  _createClass(TableStats, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          rest = _objectWithoutProperties(_this$props, [\"classes\"]); // const imageClasses = classNames(\n      //   classes.imgRaised,\n      //   classes.imgRoundedCircle,\n      //   classes.imgFluid\n      // );\n      // const navImageClasses = classNames(classes.imgRounded, classes.imgGallery);\n      // console.log({arrOfInfo});\n\n\n      return React.createElement(List, {\n        className: classes.root,\n        subheader: React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, [0, 1].map(function (sectionId) {\n        return React.createElement(\"li\", {\n          key: \"section-\".concat(sectionId),\n          className: classes.listSection,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: classes.ul,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, _this2.state.list.map(function (el, index) {\n          if (el.type === 'text') {\n            return React.createElement(\"div\", {\n              className: classes.root,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              className: classes.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75\n              },\n              __self: this\n            }, el.title, \" :  \"), React.createElement(\"h5\", {\n              style: {\n                display: \"inline\",\n                paddingLeft: '10px'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            }, el.description));\n          } else if (el.type === 'compare') {\n            return React.createElement(\"div\", {\n              className: classes.typo,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              className: classes.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }, el.title, \" \"), React.createElement(Button, {\n              style: {\n                display: \"inline\",\n                marginLeft: '10px'\n              },\n              color: el.suitable,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }, el.description));\n          }\n        })));\n      }));\n    }\n  }]);\n\n  return TableStats;\n}(React.Component);\n\nexport default withStyles(tablePageStyle)(TableStats);","map":{"version":3,"sources":["/Users/sparsh/Documents/Logic_Bomb/material-kit-react-v1.4.0/src/builtComponents/SmallComponents/TableStats.jsx"],"names":["React","withStyles","List","classNames","GridItem","Button","CustomInput","CustomLinearProgress","Success","tablePageStyle","TableStats","state","list","title","description","type","suitable","props","classes","rest","root","map","sectionId","listSection","ul","el","index","display","paddingLeft","typo","marginLeft","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport classNames from \"classnames\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport CustomLinearProgress from \"components/CustomLinearProgress/CustomLinearProgress.jsx\";\nimport Success from \"components/Typography/Success.jsx\";\n//css file\nimport tablePageStyle from \"assets/jss/material-kit-react/views/tablePage.jsx\";\n\nclass TableStats extends React.Component {\n\n  state = {\n    list: [\n      {\n        title: 'Tyre Model',\n        description: ' BCVHGU1278391734',\n        type: 'text'\n      },\n      {\n        title: 'Carbon Used',\n        description: '  Premium Quality',\n        type: 'text'\n      },\n      {\n        title: 'Tire Size : ',\n        description: ' 20 inches',\n        type: 'text'\n      },\n      {\n        title: 'Axis Size : ',\n        description: '13 Inches',\n        suitable: 'danger',\n        type: 'compare',\n      },\n      {\n        title: 'Axis Alignment : ',\n        description: '2 Inches',\n        suitable: 'danger',\n        type: 'compare'\n      }\n    ]\n  }\n\n  // componentDidMount() {\n  //   const arrOfInfo = [...this.state.list];\n  //   console.log(arrOfInfo[0].title);\n  // }\n\n  render() {\n    const { classes, ...rest } = this.props;\n\n    // const imageClasses = classNames(\n    //   classes.imgRaised,\n    //   classes.imgRoundedCircle,\n    //   classes.imgFluid\n    // );\n    // const navImageClasses = classNames(classes.imgRounded, classes.imgGallery);\n    // console.log({arrOfInfo});\n    return (\n      <List className={classes.root} subheader={<li />}>\n        {[0, 1].map(sectionId => (\n          <li key={`section-${sectionId}`} className={classes.listSection}>\n            <ul className={classes.ul}>\n\n              {\n                this.state.list.map((el, index) => {\n\n                  if (el.type === 'text') {\n                    return (\n                      <div className={classes.root} >\n                        <h4 className={classes.title}>{el.title} :  </h4>\n                        <h5 style={{ display: \"inline\", paddingLeft: '10px' }}>{el.description}</h5>\n                      </div>\n                    );\n                  } else if (el.type === 'compare') {\n                    return(\n                      <div className={classes.typo} >\n                      <h4 className={classes.title}>{el.title} </h4>\n                    \n                      <Button style={{ display: \"inline\", marginLeft: '10px' }} color={ el.suitable}>{el.description}</Button>\n                    </div>\n                    );\n                    \n                  }\n\n                })\n\n              }\n\n              {/* <div className={classes.root} >\n                <h4 className={classes.title}>Tyre Model :  </h4>\n                <h5 style={{ display: \"inline\", paddingLeft: '10px' }}>  BCVHGU1278391734</h5>\n              </div>\n              <div className={classes.typo} >\n                <h4 className={classes.title}>Carbon Used :  </h4>\n                <h5 style={{ display: \"inline\", paddingLeft: '10px' }}>  Premium Quality</h5>\n              </div>\n              <div className={classes.typo} >\n                <h4 className={classes.title} style={{ paddingRight: '20px' }}>Tire Size :  </h4>\n                <h5 style={{ display: \"inline\" , paddingLeft: '10px' }}>  21 Inches</h5>\n\n              </div>\n\n              <div className={classes.typo} >\n                <h4 className={classes.title}>Axis Size : </h4>\n                <h5 style={{ display: \"inline\", paddingLeft: '10px' }}>  12 inches</h5>\n              </div>\n\n              <div className={classes.typo} >\n                <h4 className={classes.title}>Axis Size : </h4>\n                <Success style={{fontSize : '30px' }}>13 Inches</Success>\n                <Button style={{ display: \"inline\", marginLeft: '10px' }} color=\"success\">13 Inches</Button>\n              </div>\n\n              <h4 className={classes.title}>Axis Alignment :</h4>\n              <Button style={{ display: \"inline\", marginLeft: '10px' }} color=\"danger\">2 Inches</Button> */}\n\n            </ul>\n          </li>\n        ))}\n      </List>\n    );\n  }\n}\n\n\n\n\n\n\n\nexport default withStyles(tablePageStyle)(TableStats);"]},"metadata":{},"sourceType":"module"}